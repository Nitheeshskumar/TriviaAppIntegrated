{"version":3,"sources":["components/Quiz.js","components/Result.js","components/Login.js","App.js","Admin.js","serviceWorker.js","index.js","Routes.js"],"names":["Quiz","props","react_default","a","createElement","react_transition_group","className","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","key","questionId","questionTotal","question","answerOptions","map","_id","type","name","checked","text","answer","id","value","disabled","onChange","onAnswerSelected","htmlFor","Result","_React$useState","React","useState","_React$useState2","Object","slicedToArray","dashboard","setDashboard","useEffect","axios","get","then","res","data","catch","e","console","log","quizResult","Fragment","onClick","loadinitialData","Table","striped","bordered","hover","style","textAlign","colSpan","statistics","i","score","attempts","Login","login","fontSize","App","counter","setCounter","_React$useState3","_React$useState4","setQuestionId","_React$useState5","_React$useState6","setQuestion","_React$useState7","_React$useState8","setAnswerOptions","_React$useState9","_React$useState10","setAnswer","result","useRef","_React$useState11","_React$useState12","quizQuestions","setQuizQuestions","_React$useState13","_React$useState14","isLoggedin","setIsLoggedIn","_React$useState15","_React$useState16","user","setUser","_React$useState17","_React$useState18","current","response","shuffledAnswerOptions","shuffleArray","alternatives","description","error","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","handleNext","setTimeout","setNextQuestion","body","objectSpread","max","put","questionIdt","handleAnswerSelected","event","find","isCorrect","currentTarget","counters","loginAction","document","getElementById","email","components_Result","components_Quiz","components_Login","NameForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","qstn","opt1","opt2","opt3","opt4","opt5","handleChange","bind","assertThisInitialized","handleSubmit","setState","defineProperty","target","_this2","preventDefault","payload","correct","post","onSubmit","Component","Boolean","window","location","hostname","match","ReactDOM","render","src","alt","react_router_dom","react_router","exact","path","src_App_0","Admin","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.903bbe70.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\n\nfunction Quiz(props) {\n  return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={props.questionId}>\n        <div className=\"questionCount\">\n          Question <span>{props.questionId}</span> of <span>{props.questionTotal}</span>\n        </div>\n        <h2 className=\"question\">{props.question}</h2>\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(key=>\n      <li className=\"answerOption\" key= {key._id}>\n      <input\n        type=\"radio\"\n        className=\"radioCustomButton\"\n        name=\"radioGroup\"\n        checked={key.text === props.answer}\n        id={key.text}\n        value={key.text}\n        disabled={props.answer}\n        onChange={props.onAnswerSelected}\n      />\n      <label className=\"radioCustomLabel\" htmlFor={key.text}>\n        {key.text}\n      </label>\n    </li>\n      )}\n        </ul>\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport axios from 'axios'\nimport {Table} from 'react-bootstrap'\nfunction Result(props) {\nconst [dashboard,setDashboard] = React.useState([])\nReact.useEffect(()=>{\n  axios.get('https://agile-everglades-26580.herokuapp.com/dashboard').then(res=>{\n    setDashboard(res.data)\n  }).catch(e=>console.log(e))\n})\n\n  return (\n    <CSSTransitionGroup\n      className=\"container result\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      {props.quizResult && <>\n        <div>\n        You Scored <strong>{props.quizResult}</strong>!\n      </div>\n\n      <button onClick = {props.loadinitialData}>Restart</button>\n      </>}\n\n      <div>\n      <Table striped bordered hover style={{textAlign:\"center\"}}>\n      <thead>\n            <tr>\n               <td colSpan = \"4\"> <strong>Score Dashboard</strong></td>\n            </tr>\n            <tr>\n            <td>No.</td><td>Username</td><td>High Score</td><td>Attempts</td>\n  </tr>\n         </thead>\n{(props.statistics||dashboard).map((e,i)=>{\n  return <tbody key={i}>\n  <tr>\n  <td>{i+1}</td><td>{e.name}</td><td>{e.score}</td><td>{e.attempts}</td>\n  </tr>\n  </tbody>\n\n})}\n </Table>\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nResult.propTypes = {\n  quizResult: PropTypes.number\n};\n\nexport default Result;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\n\nfunction Login(props) {\n  return (\n    <CSSTransitionGroup\n      className=\"container result\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div>\n        Please Enter your name to continue\n      </div>\n      <br></br>\n      <div>\n            Player Name: <input type= \"text\" id =\"name\" name=\"name\"></input><br></br>\n            Player Email:  <input type= \"text\" id =\"email\" name=\"email\"></input><br></br>\n\n      <button  onClick={props.login}>Login</button>\n      </div>\n      <p style={{fontSize:12}}> * Email is only used to verify previous Players </p>\n    </CSSTransitionGroup>\n  );\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import React from 'react';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\nimport Login from './components/Login'\nimport './App.css';\nimport axios from 'axios'\n\nconst App = props => {\n\n  const [counter, setCounter] = React.useState(0)\n  const [questionId, setQuestionId] = React.useState(1)\n  const [question, setQuestion] = React.useState('')\n  const [answerOptions, setAnswerOptions] = React.useState([])\n  const [answer, setAnswer] = React.useState('')\n  const result = React.useRef(0)\n  const [quizQuestions, setQuizQuestions] = React.useState([]);\n  const [isLoggedin, setIsLoggedIn] = React.useState(false);\n  const [user, setUser] = React.useState({});\n  const [dashboard,setDashboard]=React.useState([]);\n\n\n  const loadinitialData = () => {\n    setQuestionId(1); setCounter(0); setQuestion(''); setAnswerOptions([]); setAnswer(''); result.current=0; setQuizQuestions([])\n    axios.get('https://agile-everglades-26580.herokuapp.com/questions')\n      .then((response) => {\n        const shuffledAnswerOptions = response.data.map(question =>\n          shuffleArray(question.alternatives)\n        );\n        setQuestion(response.data[0].description);\n        setAnswerOptions(shuffledAnswerOptions[0]);\n        setQuizQuestions(response.data)\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n\n  React.useEffect(() => {\n    loadinitialData()\n  }, [])\n\n  const shuffleArray = (array) => {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n  const handleNext = () => {\n    if (questionId < quizQuestions.length) {\n      setTimeout(() => setNextQuestion(), 300);\n    } else {\n      let body = {...user,attempts:user.attempts+1,score:Math.max(result.current,user.score)}\n      axios.put('https://agile-everglades-26580.herokuapp.com/user',body).then(res=>{\n\n        axios.get('https://agile-everglades-26580.herokuapp.com/dashboard').then(res=>{\n          setDashboard(res.data)\n        }).catch(e=>console.log(e))\n      }).catch(e=>console.log(e))\n\n\n      setTimeout(() => {\n        setCounter((counter) => counter + 1);\n        setQuestionId((questionIdt) => questionIdt + 1);\n      }, 300);\n    }\n  }\n\n  const handleAnswerSelected = (event) => {\n    if (quizQuestions[counter].alternatives.find(e => e.isCorrect).text === event.currentTarget.value) {\n      result.current = result.current+1;\n    }\n    setAnswer(event.currentTarget.value);\n    setTimeout(()=>{\n      handleNext()\n    },1000)\n  }\n\n\n  const setNextQuestion = () => {\n    const counters = counter + 1;\n    const questionIdt = questionId + 1;\n    setCounter(counters);\n    setQuestionId(questionIdt);\n    setQuestion(quizQuestions[counters].description);\n    setAnswerOptions(quizQuestions[counters].alternatives)\n    setAnswer('')\n  }\n  const renderQuiz = () => {\n    return (\n      <Quiz\n        answer={answer}\n        answerOptions={answerOptions}\n        questionId={questionId}\n        question={question}\n        questionTotal={quizQuestions.length}\n        onAnswerSelected={handleAnswerSelected}\n        handleNext={handleNext}\n      />\n    );\n  }\n  const loginAction = () => {\n   const {value:name} = document.getElementById('name');\n   const {value:email} = document.getElementById('email');\n   let body = {\n     name:name,email:email\n   }\n   axios.put('https://agile-everglades-26580.herokuapp.com/user',body).then(res=>{\n    setIsLoggedIn(true);\n    setUser(res.data);\n   }).catch(e=>console.log(e))\n\n  }\n  const renderResult = () => {\n    return <Result quizResult={result.current} statistics={dashboard}loadinitialData={loadinitialData} />\n\n  }\n  const gameComp = () => questionId > quizQuestions.length ? renderResult() : renderQuiz();\n  const loginComp = () => <Login login={loginAction} />;\n  return (\n   <>\n      {!isLoggedin ? loginComp() : gameComp()}\n      </>\n\n  );\n\n}\n\nexport default App;\n","import React from \"react\";\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport axios from 'axios'\nclass NameForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {qstn: '',\n      opt1:'',opt2:'',opt3:'',opt4:'',opt5:'',answer:''\n    };\n\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n      this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSubmit(event) {\n        debugger\n      console.log('A name was submitted: ' + this.state);\n      event.preventDefault();\n      let payload ={\"description\":this.state.qstn,\n      \"alternatives\":[\n      {\"text\":this.state.opt1},\n      {\"text\":this.state.opt2},\n      {\"text\":this.state.opt3},\n      {\"text\":this.state.opt4},\n      {\"text\":this.state.opt5,\n      \"isCorrect\":true}\n      ],\n      \"correct\":this.state.opt5}\n      axios.post('https://agile-everglades-26580.herokuapp.com/questions',payload).then(res=>{\n          this.setState({qstn: '',\n          opt1:'',opt2:'',opt3:'',opt4:'',opt5:'',answer:''\n        })\n      })\n    }\n\n    render() {\n      return (\n\n        <CSSTransitionGroup\n        className=\"container result\"\n        component=\"div\"\n        transitionName=\"fade\"\n        transitionEnterTimeout={800}\n        transitionLeaveTimeout={500}\n        transitionAppear\n        transitionAppearTimeout={500}\n      >\n\n\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Question:{' '}\n            <input type=\"text\" name = \"qstn\" value={this.state.qstn} onChange={this.handleChange} />\n          </label><br></br><br></br>\n          <label>\n            Opt 1:{' '}\n            <input type=\"text\" name = \"opt1\" value={this.state.opt1} onChange={this.handleChange} />\n          </label><br></br><br></br>\n          <label>\n            Opt 2:{' '}\n            <input type=\"text\" name = \"opt2\" value={this.state.opt2} onChange={this.handleChange} />\n          </label><br></br><br></br>\n          <label>\n            Opt 3:{' '}\n            <input type=\"text\" name = \"opt3\" value={this.state.opt3} onChange={this.handleChange} />\n          </label><br></br><br></br>\n          <label>\n            Opt 4:{' '}\n            <input type=\"text\" name = \"opt4\" value={this.state.opt4} onChange={this.handleChange} />\n          </label><br></br><br></br>\n          <label>\n            Opt 5:{' '}\n            <input type=\"text\" name = \"opt5\" value={this.state.opt5} onChange={this.handleChange} />\n          </label><br></br><br></br>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        </CSSTransitionGroup>\n      );\n    }\n  }\n  export default NameForm\n\n\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Routes';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport App from \"./App\";\nimport Admin from './Admin'\nimport Result from \"./components/Result\";\n\nexport default function BasicExample() {\n    return (\n        <div className=\"App\">\n        <div className=\"App-header\">\n          <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/SARS-CoV-2_without_background.png/800px-SARS-CoV-2_without_background.png\" className=\"App-logo\" alt=\"logo\" />\n          <h2>Covid Quiz  </h2>\n      </div>\n      <Router>\n           <div>\n          <Switch>\n            <Route exact path=\"/\">\n              <App />\n            </Route>\n            <Route path=\"/dashboard\">\n            <Result />\n            </Route>\n            <Route path=\"/admin\">\n              <Admin/>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n      </div>\n    );\n  }"],"sourceRoot":""}